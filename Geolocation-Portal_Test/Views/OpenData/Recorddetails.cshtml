@model Geolocation_Portal_Test.Models.record

@{
    ViewBag.Title = "Recorddetails";
}

<h1>Datensatzdetails</h1>
<hr />

<div>
    <div class="card bg-light mb-3">
        <div class="card-block">
            <div class="card-header">
                <img class="icon" width="20" height="20" src="~/icons/Category/@Html.DisplayFor(model => model.category.icon)" />
                @Html.DisplayFor(model => model.title)

                @if (Session["UserRole"] != null && Convert.ToInt32(Session["UserRole"]) < 3)
                {
                    <div class="fa-pull-right">
                        <a class="nolink" href="@Url.Action("Recordbearbeitung", "OpenData", new { id = Model.Id })" title="Datensatz bearbeiten"><i class="fa fa-edit"></i></a>
                        <a class="nolink" href="@Url.Action("Recordentfernung", "OpenData", new { id = Model.Id })" title="Datensatz löschen"><i class="fa fa-trash"></i></a>
                    </div>
                }
            </div>
            <div class="card-body">
                <div class="card-subtitle">
                    <div class="d-flex justify-content-between">
                        <span>
                            <i class="fa fa-calendar"></i>
                            @Html.DisplayFor(model => model.dataset_modified_date.ToString().Split(new char[] { ' ' })[0])
                        </span>
                        <span><i class="fa fa-download"></i> @ViewData["downloadcount"] </span>
                        @Html.Partial("_rating", Model.rating)
                    </div>
                </div>
                <p class="card-text">
                    @Html.DisplayFor(model => model.description)
                </p>

                <h4>Lizenz:</h4>

                <!-- Begin of Popup Modal for showing licence -->
                <button type="button" class="btn btn-dark" data-toggle="modal" data-target="#licenceModal">
                    @Html.DisplayFor(model => model.licence.name)
                </button>

                <div class="modal fade" id="licenceModal">
                    <div class="modal-dialog modal-dialog-centered">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h4 class="modal-title">Lizenz: @Html.DisplayFor(model => model.licence.name)</h4>
                                <button type="button" class="close" data-dismiss="modal">&times;</button>
                            </div>

                            <div class="modal-body">
                                @Html.DisplayFor(model => model.licence.description)
                            </div>

                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-dismiss="modal">Schließen</button>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- End of Pupup Modal for showing licence -->

                <br /><br />

                <h4>Datensatz veröffentlicht von:</h4>

                <!-- Begin of Popup Modal for showing publisher -->
                <button type="button" class="btn btn-dark" data-toggle="modal" data-target="#publisherModal">
                    @Html.DisplayFor(model => model.publisher.name)
                </button>

                <div class="modal fade" id="publisherModal">
                    <div class="modal-dialog modal-dialog-centered">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h4 class="modal-title">Veröffentlicher: @Html.DisplayFor(model => model.publisher.name)</h4>
                                <button type="button" class="close" data-dismiss="modal">&times;</button>
                            </div>

                            <div class="modal-body">
                                @Html.DisplayFor(model => model.publisher.description)
                            </div>

                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-dismiss="modal">Schließen</button>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- End of Pupup Modal for showing publisher -->

                <br /><br />

                <h4>Dateien und Quellen:</h4>
                <div class="table-responsive">
                    <table class="table">
                        <thead>
                            <tr>
                                <th>Dateiname</th>
                                <th>Speichergröße</th>
                                <th>Veröffentlichungsdatum</th>
                                <th>Downloadanzahl</th>
                                <th>Herunterladen</th>
                            </tr>
                        </thead>
                        <tbody>
                            <!-- Hier muss eine Tabelle mit allen Dateien aufgelistet werden. -->
                            @foreach (var file in Model.file)
                            {
                                <tr>
                                    <td>
                                        <a href="@Url.Action("Download", "OpenData", new { fileName = file.name, recordId = Model.Id })" title="Herunterladen">
                                            @file.name
                                        </a>
                                    </td>
                                    <td>@file.file_size.ToString() @ViewData["file_size_extension"]</td>
                                    <td>@file.file_upload_date</td>
                                    <td>@file.download_count</td>
                                    <td>
                                        <a href="@Url.Action("Download", "OpenData", new { fileName = file.name, recordId = Model.Id })" title="Herunterladen">
                                            <img class="float-left mr-2" width="25" height="25" src="~/icons/@Html.DisplayFor(modelItem => file.file_icon)-icon.png" />
                                        </a>

                                        @{
                                            var filetype = file.name.Split('.');

                                            if (Model.geo_data)
                                            {
                                                if (filetype[filetype.Count() - 1] == "geojson")
                                                {
                                                    int geofileId = file.Id;
                                                    <a href="~/GeoData/Index/@geofileId.ToString()" title="Vorschau"><i class="fa fa-map"></i></a>
                                                }
                                            }
                                            else if (Model.dia_data)
                                            {
                                                if (filetype[filetype.Count() - 1] == "xml")
                                                {
                                                    int diafileId = file.Id;
                                                    <a href="~/DiagramData/Index/@diafileId.ToString()" title="Vorschau"><i class="fa fa-pie-chart"></i></a>
                                                }
                                            }
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="card-footer" style="min-height:50px;">

                <h4>Kommentar schreiben:</h4>
                @using (Html.BeginForm("RecordComment", "OpenData", FormMethod.Post, new { enctype = "multipart/form-data", id = "myFormStyle" }))
                {
                    @Html.AntiForgeryToken()
                    <input type="hidden" id="record_id" name="record_id" value="@Model.Id" />
                    <div class="form-group row">
                        <label for="bewertung" class="col-3">Bewertung</label>
                        <div class="col-9">
                            <input style="display:none;" type="number" class="form-control mw-100" name="bewertung" id="bewertung" min="0" max="5" value="0" required>
                            <section class='rating-widget'>
                                <!-- Rating Stars Box -->
                                <div class='rating-stars text-center'>
                                    <ul id='stars'>
                                        <li class='star' title='Poor' data-value='1'>
                                            <i class='fa fa-star fa-fw'></i>
                                        </li>
                                        <li class='star' title='Fair' data-value='2'>
                                            <i class='fa fa-star fa-fw'></i>
                                        </li>
                                        <li class='star' title='Good' data-value='3'>
                                            <i class='fa fa-star fa-fw'></i>
                                        </li>
                                        <li class='star' title='Excellent' data-value='4'>
                                            <i class='fa fa-star fa-fw'></i>
                                        </li>
                                        <li class='star' title='WOW!!!' data-value='5'>
                                            <i class='fa fa-star fa-fw'></i>
                                        </li>
                                    </ul>
                                </div>
                            </section>
                        </div>
                    </div>

                    <div class="form-group row">
                        <label for="person_name" class="col-3">Ihr Name</label>
                        <div class="col-9">
                            <input type="text" class="form-control mw-100" name="person_name" id="person_name" maxlength="50" required>
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="title" class="col-3">Überschrift</label>
                        <div class="col-9">
                            <input type="text" class="form-control mw-100" name="title" id="title" maxlength="50" required>
                        </div>
                    </div>
                    <div class="form-group">
                        <textarea class="form-control mw-100" id="text" name="text" rows="10" maxlength="3000" required></textarea>
                    </div>
                    <button type="submit" class="btn btn-primary">Kommentar veröffentlichen</button>
                }
                @if (Model.comment.Count != 0)
                {
                    <br /><br /><br />
                    <h4>Kommentare:</h4>
                    <div>
                        <!-- Schleife, um alle bereits vorhandenen Kommentare des Datensatzes aufzulisten. -->
                        @foreach (var comment in Model.comment)
                        {
                            <div class="border-bottom mt-2">
                                <div>
                                    <span>@Html.Partial("_rating", comment.bewertung)</span>
                                    <h3>@comment.title</h3>
                                    <span class="blockquote-footer">@comment.person_name</span>
                                </div>
                                <div>
                                    <p>@comment.text</p>
                                </div>
                            </div>
                        }
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">

    $(document).ready(function () {

        /* 1. Visualizing things on Hover - See next part for action on click */
        $('#stars li').on('mouseover', function() {
            var onStar = parseInt($(this).data('value'), 10); // The star currently mouse on
   
            // Now highlight all the stars that's not after the current hovered star
            $(this).parent().children('li.star').each(function(e) {
                if (e < onStar) {
                    $(this).addClass('hover');
                } else {
                    $(this).removeClass('hover');
                }
            });
    
        }).on('mouseout', function(){
            $(this).parent().children('li.star').each(function(e){
                $(this).removeClass('hover');
            });
        });

        /* 2. Action to perform on click */
        $('#stars li').on('click', function(){
            var onStar = parseInt($(this).data('value'), 10); // The star currently selected
            var stars = $(this).parent().children('li.star');
    
            for (i = 0; i < stars.length; i++) {
                $(stars[i]).removeClass('selected');
            }
    
            for (i = 0; i < onStar; i++) {
                $(stars[i]).addClass('selected');
            }
    
            // JUST RESPONSE (Not needed)
            var ratingValue = parseInt($('#stars li.selected').last().data('value'), 10);

            responseMessage(ratingValue);
        });
    });


    function responseMessage(msg) {
        $('#bewertung').val(msg);
    }

</script>