@model Geolocation_Portal_Test.Models.record

@{
    ViewBag.Title = "Recorddetails";
}

<h1>Datensatzdetails</h1>
<hr />

<div>
    <div class="card bg-light mb-3">
        <div class="card-block">
            <div class="card-header">
                <img class="icon" width="20" height="20" src="~/icons/Category/@Html.DisplayFor(model => model.category.icon)" />
                @Html.DisplayFor(model => model.title)

                @if (Session["UserRole"] != null && Convert.ToInt32(Session["UserRole"]) < 3)
                {
                    <div class="fa-pull-right">
                        <a class="nolink" href="@Url.Action("Recordbearbeitung", "OpenData")" title="Datensatz bearbeiten"><i class="fa fa-edit"></i></a>
                        <a class="nolink" href="@Url.Action("Recordentfernung", "OpenData")" title="Datensatz löschen"><i class="fa fa-trash"></i></a>
                    </div>
                }
            </div>
            <div class="card-body">
                <div class="card-subtitle">
                    <div class="d-flex justify-content-between">
                        <span>
                            <i class="fa fa-calendar"></i>
                            @Html.DisplayFor(model => model.dataset_modified_date.ToString().Split(new char[] { ' ' })[0])
                        </span>
                        <span><i class="fa fa-download"></i> @ViewData["downloadcount"] </span>
                        @Html.Partial("_rating", Model.rating)
                    </div>
                </div>
                <p class="card-text">
                    @Html.DisplayFor(model => model.description)
                </p>

                <h4>Lizenz:</h4>
                <button id="open-dialog" class="btn btn-dark" title="Details zur Lizenz anzeigen">@Html.DisplayFor(model => model.licence.name)</button>
                <dialog role="dialog" aria-labelledby="dialog-heading">
                    <button id="close-dialog">Schließen</button>
                    <h2 id="dialog-heading">Info</h2>
                    <p> @Html.DisplayFor(model => model.licence.description) </p>
                </dialog>


                <br /><br />

                <h4>Datensatz veröffentlicht von:</h4>
                <button id="open-dialog" class="btn btn-dark" title="Details zum Publisher anzeigen">@Html.DisplayFor(model => model.publisher.name)</button>
                <dialog role="dialog" aria-labelledby="dialog-heading">
                    <button id="close-dialog">Schließen</button>
                    <h2 id="dialog-heading">Info</h2>
                    <p> @Html.DisplayFor(model => model.publisher.description) </p>
                </dialog>

                <br /><br />

                <h4>Dateien und Quellen:</h4>
                <div class="table-responsive">
                    <table class="table">
                        <thead>
                            <tr>
                                <th>Dateiname</th>
                                <th>Speichergröße</th>
                                <th>Veröffentlichungsdatum</th>
                                <th>Downloadanzahl</th>
                                <th>Herunterladen</th>
                            </tr>
                        </thead>
                        <tbody>
                            <!-- Hier muss eine Tabelle mit allen Dateien aufgelistet werden. -->
                            @foreach (var file in Model.file)
                            {
                            <tr>
                                <td>@file.name</td>
                                <td>@file.file_size.ToString() @ViewData["file_size_extension"]</td>
                                <td>@file.file_upload_date</td>
                                <td>@file.download_count</td>
                                <td>
                                    <a href="@Url.Action("Download", "OpenData", new { fileName = file.name, recordId = Model.Id })" title="Herunterladen">
                                        <img class="float-left mr-2" width="25" height="25" src="~/icons/@Html.DisplayFor(modelItem => file.file_icon)-icon.png" />
                                    </a>

                                    @{
                                        var filetype = file.name.Split('.');

                                        if (Model.geo_data)
                                        {
                                            if (filetype[filetype.Count() - 1] == "geojson")
                                            {
                                                int geofileId = file.Id;
                                                <a href="~/GeoData/index/@geofileId.ToString()" title="Vorschau"><i class="fa fa-map"></i></a>
                                            }
                                        }
                                        else if (Model.dia_data)
                                        {
                                            if (filetype[filetype.Count() - 1] == "xml")
                                            {
                                                int diafileId = file.Id;
                                                <a href="~/GeoData/index/@diafileId.ToString()" title="Vorschau"><i class="fa fa-pie-chart"></i></a>
                                            }
                                        }
                                    }
                                </td>
                            </tr>
                             }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="card-footer" style="min-height:50px;">

                <h4>Kommentar schreiben:</h4>
                @using (Html.BeginForm("RecordComment", "OpenData", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    <div class="form-group row">
                        <label for="rating" class="col-3">Bewertung:</label>
                        <div class="col-9">
                            <!-- ToDo: Hier muss noch das Auswählen der Sterne implementiert werden. -->
                            <input type="text" content="Stern1 Stern2 Stern3 Stern4 Stern5" class="form-control mw-100" id="rating" maxlength="50">
                        </div>
                    </div>

                    <div class="form-group row">
                        <label for="sendername" class="col-3">Ihr Name:</label>
                        <div class="col-9">
                            <input type="text" class="form-control mw-100" id="sendername" maxlength="50">
                        </div>
                    </div>

                    <div class="form-group">
                        <textarea class="form-control mw-100" id="comment" rows="10" maxlength="3000"></textarea>
                    </div>
                }
                @if (Model.comment.Count != 0)
                {
                    <br /><br /><br />
                    <h4>Kommentare:</h4>
                    <div>
                        <!-- Schleife, um alle bereits vorhandenen Kommentare des Datensatzes aufzulisten. -->
                        @foreach (var comment in Model.comment)
                        {
                            <div class="border-bottom mt-2">
                                <div>
                                    <span>@Html.Partial("_rating", comment.bewertung)</span>
                                    <h3>@comment.title</h3>
                                    <span class="blockquote-footer">@comment.person_name</span>
                                </div>
                                <div>
                                    <p>@comment.text</p>
                                </div>
                            </div>
                        }
                    </div>
                }
            </div>
        </div>
    </div>
</div>